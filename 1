好的，我将把我们之前的所有正确和最终的配置步骤，直接转化为一个完整的、格式标准的 Markdown 文件，您可以直接复制并粘贴到 GitHub 上。

这份文档包含了最终的配置代码、安装指南，以及解决服务超时问题的关键修正。

🚀 Rclone 百度网盘单向同步自动化部署指南
本文档总结了 Rclone 百度网盘（Baidu BCE）挂载与单向同步的完整、稳定部署流程。配置包括开机自动挂载、特定子目录同步，以及 Systemd 定时任务。

📌 步骤零：环境准备与变量确认
在执行任何操作之前，请核对并确认您环境中的关键路径。

变量	默认值	描述
RCLONE_BIN	/root/rclone-integrated/rclone/rclone	Rclone 可执行文件路径
RCLONE_CONFIG	/root/.config/rclone/rclone.conf	Rclone 配置文件路径
MOUNT_POINT	/root/BaiduDisk	网盘挂载点
SYNC_SOURCE	/root/BaiduDisk/BaiduShare	实际同步的云端子目录
SYNC_DEST	/root/data/BaiduShare	实际同步的本地目标目录
TIMEOUT_SECONDS	3600	服务超时时间（1 小时）

导出到 Google 表格
执行命令：创建必要目录

Bash

mkdir -p /root/BaiduDisk
mkdir -p /root/data/BaiduShare
🛠️ 部署脚本：一键配置所有服务
以下脚本将创建并启用所有必要的 Systemd 服务和定时器，并解决因 bisync 失败留下的残留配置。

将以下内容保存为 rclone_setup.sh 并以 root 权限运行：

Bash

#!/bin/bash

# --- 核心配置变量 (请与上述表格核对) ---
RCLONE_BIN="/root/rclone-integrated/rclone/rclone"
RCLONE_CONFIG="/root/.config/rclone/rclone.conf"
MOUNT_POINT="/root/BaiduDisk"
SYNC_SOURCE="/root/BaiduDisk/BaiduShare"
SYNC_DEST="/root/data/BaiduShare"
RC_ADDR="127.0.0.1:5572" 
MOUNT_SERVICE_NAME="rclone-baidu.service"
SYNC_SERVICE_NAME="rclone-mirror-data.service"
SYNC_TIMER_NAME="rclone-sync.timer"
TIMEOUT_SECONDS=3600

echo "--- 1. 清理旧的 Bisync 配置和遗留文件 ---"
systemctl stop rclone-bisync.timer 2>/dev/null
systemctl stop rclone-bisync.service 2>/dev/null
systemctl disable rclone-bisync.timer 2>/dev/null
systemctl disable rclone-bisync.service 2>/dev/null
rm -f /etc/systemd/system/rclone-bisync.*
rm -rf /root/.config/rclone/bisync-baidu

echo "--- 2. 注册 Rclone 挂载服务 ($MOUNT_SERVICE_NAME) ---"
cat > /etc/systemd/system/$MOUNT_SERVICE_NAME << EOF
[Unit]
Description=Rclone Mount BaiduDisk
AssertFileIsExecutable=$RCLONE_BIN
After=network-online.target

[Service]
Type=notify
ExecStart=$RCLONE_BIN mount baidu: $MOUNT_POINT \
    --config=$RCLONE_CONFIG \
    --allow-other \
    --vfs-cache-mode full \
    --poll-interval 15s \
    --dir-perms 0777 \
    --file-perms 0666 \
    --rc \
    --rc-addr $RC_ADDR \
    --rc-no-auth
ExecStop=/bin/fusermount -u $MOUNT_POINT
Restart=always
User=root
Group=root

[Install]
WantedBy=multi-user.target
EOF

echo "--- 3. 注册 Rclone 单向同步服务 ($SYNC_SERVICE_NAME) ---"
cat > /etc/systemd/system/$SYNC_SERVICE_NAME << EOF
[Unit]
Description=Rclone Mirror BaiduShare (Cloud Sub-Folder to Local)
Requires=$MOUNT_SERVICE_NAME
After=$MOUNT_SERVICE_NAME

[Service]
Type=oneshot
TimeoutSec=$TIMEOUT_SECONDS
# 核心同步命令：将 /root/BaiduDisk/BaiduShare 单向同步到 /root/data/BaiduShare
ExecStart=$RCLONE_BIN sync $SYNC_SOURCE $SYNC_DEST \
    --config=$RCLONE_CONFIG \
    --checksum \
    --log-file=/var/log/rclone-mirror-data.log \
    --log-level INFO
User=root
Group=root

[Install]
WantedBy=multi-user.target
EOF

echo "--- 4. 注册定时器 ($SYNC_TIMER_NAME) (每 30 分钟) ---"
cat > /etc/systemd/system/$SYNC_TIMER_NAME << EOF
[Unit]
Description=Run Rclone Single Direction Sync every 30 minutes

[Timer]
OnUnitActiveSec=30min
OnBootSec=5min
Unit=$SYNC_SERVICE_NAME

[Install]
WantedBy=timers.target
EOF

echo "--- 5. 重新加载、启用和启动所有服务 ---"

systemctl daemon-reload

# 启用并启动挂载服务 (开机自启)
systemctl enable $MOUNT_SERVICE_NAME
systemctl start $MOUNT_SERVICE_NAME

# 启用并启动定时器 (开机自启)
systemctl enable $SYNC_TIMER_NAME
systemctl start $SYNC_TIMER_NAME

# 立即手动触发首次单向同步
systemctl start $SYNC_SERVICE_NAME

echo "=========================================================="
echo "✨ Rclone 自动化配置已完成！"
echo "请使用 systemctl status $MOUNT_SERVICE_NAME 检查挂载状态。"
echo "=========================================================="
✅ 最终验证与检查命令
在运行上述脚本后，您可以使用以下命令来确认服务状态：

目的	命令	预期输出
检查挂载状态	systemctl status rclone-baidu.service	Active: active (running)
检查定时器状态	systemctl list-timers rclone-sync.timer	NEXT 列显示下次运行时间
检查同步日志	tail -f /var/log/rclone-mirror-data.log	显示文件传输进度
检查本地文件	ls -l /root/data/BaiduShare	显示网盘子目录中的文件列表
