#!/bin/bash

################################################################################
# 阿里云盘单向同步 + WebDAV SSL/TLS 一键部署脚本
################################################################################
#
# 功能说明:
#   • 自动从阿里云盘单向下载同步文件到 VPS
#   • 支持删除同步 (云盘删除文件，VPS 本地也会删除)
#   • 通过 WebDAV 提供 HTTPS 加密远程访问
#   • 支持自定义用户名、密码、端口、域名
#   • 自动申请 Let's Encrypt SSL 证书
#
# 系统要求:
#   • Linux (Ubuntu/Debian)
#   • 至少 1GB 磁盘空间 (根据同步文件大小调整)
#   • 需要 root 或 sudo 权限
#   • 能访问外网 (用于下载工具和证书)
#
# 前置准备:
#   1. 一个有效的域名 (用于 SSL 证书)
#   2. 域名 DNS 指向你的 VPS IP
#   3. 阿里云盘账号
#
# 使用方法:
#   chmod +x deploy-webdav-ssl.sh
#   sudo ./deploy-webdav-ssl.sh
#
# 脚本流程:
#   [1/7] 清理旧服务 - 停止之前运行的同步和 WebDAV 服务
#   [2/7] 安装依赖 - 安装必要的系统工具
#   [3/7] 安装 aliyunpan - 下载并安装云盘同步工具
#   [4/7] 配置阿里云盘 - 扫二维码登录你的阿里云盘账号
#   [5/7] 创建同步配置 - 生成同步任务配置文件
#   [6/7] 申请 SSL 证书 - 从 Let's Encrypt 获取免费证书
#   [7/7] 创建 systemd 服务 - 设置开机自启和自动重启
#
# 同步说明:
#   • 模式: 单向下载 (云盘 → VPS，不支持上传)
#   • 策略: 排他同步 (删除云盘文件，VPS 本地也会删除)
#   • 延迟: 30-60 秒，不是实时同步
#   • 首次: 首次同步可能需要较长时间，请耐心等待
#
# WebDAV 访问:
#   • 协议: HTTPS (安全加密)
#   • 地址: https://你的域名:端口
#   • 认证: 用户名 + 密码
#   • 兼容: macOS Finder、Windows Explorer、iOS Files 等
#
# 常用命令:
#   查看同步状态:
#     systemctl status aliyunpan-sync
#     systemctl status rclone-webdav
#
#   查看实时日志:
#     tail -f /var/log/aliyunpan_sync.log
#     tail -f /var/log/rclone_webdav.log
#     journalctl -u aliyunpan-sync -f
#
#   重启服务:
#     systemctl restart aliyunpan-sync
#     systemctl restart rclone-webdav
#
#   停止服务:
#     systemctl stop aliyunpan-sync
#     systemctl stop rclone-webdav
#
#   查看本地文件:
#     ls -lh /root/AliyunDisk
#     du -sh /root/AliyunDisk
#
#   查看云盘文件:
#     aliyunpan ls /Aliyun_Disk
#     aliyunpan who
#
# 证书管理:
#   查看证书信息:
#     openssl x509 -enddate -noout -in /etc/letsencrypt/live/你的域名/fullchain.pem
#
#   手动续期证书:
#     sudo certbot renew
#
#   自动续期设置 (crontab):
#     sudo crontab -e
#     添加: 0 3 * * * certbot renew --quiet && systemctl restart rclone-webdav
#
# 防火墙配置:
#   如使用 ufw:
#     sudo ufw allow 443/tcp  (HTTPS)
#     sudo ufw allow 你的端口/tcp
#
# 故障排查:
#   1. 同步未启动
#      systemctl status aliyunpan-sync
#      journalctl -u aliyunpan-sync -n 50
#
#   2. WebDAV 无法访问
#      systemctl status rclone-webdav
#      tail -f /var/log/rclone_webdav.log
#
#   3. 证书过期
#      sudo certbot renew
#      systemctl restart rclone-webdav
#
#   4. 同步缓慢
#      检查网络连接
#      查看磁盘空间: df -h
#      查看 CPU/内存: top
#
# 安全建议:
#   • 使用强密码
#   • 定期检查日志
#   • 定期备份重要文件
#   • 不要在公网上暴露不必要的端口
#   • 考虑使用反向代理 (nginx) 加密和隐藏 WebDAV
#
# 卸载说明:
#   sudo systemctl stop aliyunpan-sync rclone-webdav
#   sudo systemctl disable aliyunpan-sync rclone-webdav
#   sudo rm /etc/systemd/system/aliyunpan-sync.service
#   sudo rm /etc/systemd/system/rclone-webdav.service
#   sudo systemctl daemon-reload
#   sudo pkill -f "aliyunpan sync"
#   sudo pkill -f "rclone serve webdav"
#   rm -rf ~/.config/aliyunpan
#   sudo rm -rf /root/AliyunDisk (可选，根据需要)
#
################################################################################

set -e

echo "=========================================="
echo "阿里云盘同步 + WebDAV SSL/TLS 一键部署"
echo "=========================================="
echo ""

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# 检查 root
if [ "$EUID" -ne 0 ]; then 
    echo -e "${RED}请使用 root 用户或 sudo 运行此脚本${NC}"
    exit 1
fi

# 检测系统架构
ARCH=$(uname -m)
case $ARCH in
    x86_64)
        ALIYUNPAN_ARCH="linux-amd64"
        ;;
    aarch64|arm64)
        ALIYUNPAN_ARCH="linux-arm64"
        ;;
    armv7l)
        ALIYUNPAN_ARCH="linux-arm"
        ;;
    *)
        echo -e "${RED}不支持的系统架构: $ARCH${NC}"
        exit 1
        ;;
esac

echo -e "${GREEN}系统架构: $ARCH${NC}"
echo ""

# ============ 用户配置 ============
echo -e "${BLUE}【1. 配置同步目录】${NC}"
echo "默认: /root/AliyunDisk"
read -p "请输入本地同步目录 (按 Enter 使用默认值): " INPUT_LOCAL_DIR
SYNC_LOCAL_DIR=${INPUT_LOCAL_DIR:-/root/AliyunDisk}
echo -e "${GREEN}✓ 同步目录: $SYNC_LOCAL_DIR${NC}"
echo ""

echo -e "${BLUE}【2. 配置云盘路径】${NC}"
echo "默认: / (根目录)"
read -p "请输入要同步的阿里云盘文件夹路径 (按 Enter 使用默认值): " INPUT_CLOUD_DIR
CLOUD_DIR=${INPUT_CLOUD_DIR:-/}
echo -e "${GREEN}✓ 云盘路径: $CLOUD_DIR${NC}"
echo ""

echo -e "${BLUE}【3. 配置 WebDAV 用户名】${NC}"
echo "默认: admin"
read -p "请输入 WebDAV 用户名 (按 Enter 使用默认值): " INPUT_USER
WEBDAV_USER=${INPUT_USER:-admin}
echo -e "${GREEN}✓ 用户名: $WEBDAV_USER${NC}"
echo ""

echo -e "${BLUE}【4. 配置 WebDAV 密码】${NC}"
while true; do
    read -sp "请输入 WebDAV 密码: " WEBDAV_PASSWORD
    echo ""
    if [ -z "$WEBDAV_PASSWORD" ]; then
        echo -e "${RED}✗ 密码不能为空，请重新输入${NC}"
        continue
    fi
    read -sp "请再次输入密码以确认: " WEBDAV_PASSWORD_CONFIRM
    echo ""
    if [ "$WEBDAV_PASSWORD" = "$WEBDAV_PASSWORD_CONFIRM" ]; then
        echo -e "${GREEN}✓ 密码已设置${NC}"
        break
    else
        echo -e "${RED}✗ 两次输入的密码不一致，请重新输入${NC}"
    fi
done
echo ""

echo -e "${BLUE}【5. 配置 WebDAV 端口】${NC}"
echo "默认: 4444"
read -p "请输入 WebDAV 端口 (按 Enter 使用默认值): " INPUT_PORT
WEBDAV_PORT=${INPUT_PORT:-4444}
echo -e "${GREEN}✓ 端口: $WEBDAV_PORT${NC}"
echo ""

echo -e "${BLUE}【6. 配置 SSL 证书域名】${NC}"
echo "默认: vps1.chf5762.cloudns.org"
read -p "请输入 SSL 证书域名 (按 Enter 使用默认值): " INPUT_DOMAIN
DOMAIN=${INPUT_DOMAIN:-vps1.chf5762.cloudns.org}
CERT_DIR="/etc/letsencrypt/live/$DOMAIN"
echo -e "${GREEN}✓ 域名: $DOMAIN${NC}"
echo ""

# 显示配置确认
echo -e "${GREEN}========== 配置信息确认 ==========${NC}"
echo "同步目录: $SYNC_LOCAL_DIR"
echo "云盘路径: $CLOUD_DIR"
echo "同步模式: 单向下载 (云盘→VPS)"
echo "删除同步: 支持 (云盘删除，本地也删除)"
echo "WebDAV 用户: $WEBDAV_USER"
echo "WebDAV 端口: $WEBDAV_PORT"
echo "SSL 域名: $DOMAIN"
echo -e "${GREEN}=================================${NC}"
echo ""

read -p "确认以上配置? (y/n): " CONFIRM
if [ "$CONFIRM" != "y" ] && [ "$CONFIRM" != "Y" ]; then
    echo "安装已取消"
    exit 0
fi

echo ""
echo -e "${GREEN}开始安装...${NC}"
echo ""

# ============ 安装步骤 ============

# 1. 清理旧服务
echo -e "${YELLOW}[1/7] 清理旧服务...${NC}"
systemctl stop aliyunpan-sync 2>/dev/null || true
systemctl stop rclone-webdav 2>/dev/null || true
pkill -f "aliyunpan sync" 2>/dev/null || true
pkill -f "rclone serve webdav" 2>/dev/null || true
sleep 2

# 2. 安装依赖
echo -e "${YELLOW}[2/7] 安装依赖...${NC}"
apt-get update 2>&1 | grep -v "^W:" || true
apt-get install -y wget curl certbot unzip

# 3. 安装 aliyunpan
echo -e "${YELLOW}[3/7] 安装 aliyunpan...${NC}"
ALIYUNPAN_VERSION="v0.3.3"
INSTALL_DIR="/usr/local/bin"

if ! command -v aliyunpan &> /dev/null; then
    cd /tmp
    rm -rf aliyunpan-* 2>/dev/null || true
    
    DOWNLOAD_URL="https://github.com/tickstep/aliyunpan/releases/download/${ALIYUNPAN_VERSION}/aliyunpan-${ALIYUNPAN_VERSION}-${ALIYUNPAN_ARCH}.zip"
    echo "下载地址: $DOWNLOAD_URL"
    
    if ! wget -q --show-progress "$DOWNLOAD_URL"; then
        echo -e "${RED}下载失败${NC}"
        exit 1
    fi
    
    unzip -q "aliyunpan-${ALIYUNPAN_VERSION}-${ALIYUNPAN_ARCH}.zip"
    chmod +x "aliyunpan-${ALIYUNPAN_VERSION}-${ALIYUNPAN_ARCH}/aliyunpan"
    mv "aliyunpan-${ALIYUNPAN_VERSION}-${ALIYUNPAN_ARCH}/aliyunpan" ${INSTALL_DIR}/
    rm -rf aliyunpan-${ALIYUNPAN_VERSION}-${ALIYUNPAN_ARCH}*
fi

echo -e "${GREEN}✓ aliyunpan: $(aliyunpan version 2>/dev/null)${NC}"

# 4. 创建同步目录并登录
echo -e "${YELLOW}[4/7] 配置阿里云盘...${NC}"
mkdir -p "$SYNC_LOCAL_DIR"

echo -e "${GREEN}请使用阿里云盘 App 扫描下方二维码登录:${NC}"
echo ""
aliyunpan login

if ! aliyunpan who > /dev/null 2>&1; then
    echo -e "${RED}登录失败${NC}"
    exit 1
fi

echo -e "${GREEN}登录成功!${NC}"
aliyunpan who
echo ""

# 5. 创建同步配置
echo -e "${YELLOW}[5/7] 创建同步配置...${NC}"
mkdir -p ~/.config/aliyunpan/sync_drive

cat > ~/.config/aliyunpan/sync_drive/sync_drive_config.json <<EOF
{
  "configVer": "1.0",
  "syncTaskList": [
    {
      "name": "单向下载-${CLOUD_DIR}",
      "localFolderPath": "${SYNC_LOCAL_DIR}",
      "panFolderPath": "${CLOUD_DIR}",
      "mode": "download",
      "policy": "exclusive",
      "driveName": "backup"
    }
  ]
}
EOF

echo -e "${GREEN}✓ 同步配置已创建${NC}"

# 6. 申请 SSL 证书
echo -e "${YELLOW}[6/7] 申请 SSL 证书...${NC}"

if [ ! -f "$CERT_DIR/fullchain.pem" ]; then
    echo "申请 Let's Encrypt 证书..."
    certbot certonly --standalone -d "$DOMAIN" --non-interactive --agree-tos -m admin@"$DOMAIN" 2>&1 | grep -v "^Saving\|^Requesting"
    echo -e "${GREEN}✓ 证书获取成功${NC}"
else
    echo -e "${GREEN}✓ 证书已存在${NC}"
fi

# 7. 创建 systemd 服务
echo -e "${YELLOW}[7/7] 创建 systemd 服务...${NC}"

# 同步服务
cat > /etc/systemd/system/aliyunpan-sync.service <<'SYNC_EOF'
[Unit]
Description=Aliyun Pan Sync Service
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=root
Environment="ALIYUNPAN_CONFIG_DIR=/root/.config/aliyunpan"
ExecStart=/usr/local/bin/aliyunpan sync start --log true --dp 2 --up 2
Restart=always
RestartSec=10
StandardOutput=append:/var/log/aliyunpan_sync.log
StandardError=append:/var/log/aliyunpan_sync.log

[Install]
WantedBy=multi-user.target
SYNC_EOF

# WebDAV 服务
cat > /etc/systemd/system/rclone-webdav.service <<EOF
[Unit]
Description=Rclone WebDAV Server with SSL/TLS
After=network-online.target aliyunpan-sync.service
Wants=network-online.target

[Service]
Type=simple
User=root
ExecStart=/usr/bin/rclone serve webdav "$SYNC_LOCAL_DIR" \\
    --addr 0.0.0.0:$WEBDAV_PORT \\
    --user $WEBDAV_USER \\
    --pass $WEBDAV_PASSWORD \\
    --cert $CERT_DIR/fullchain.pem \\
    --key $CERT_DIR/privkey.pem \\
    --vfs-cache-mode full \\
    --log-file /var/log/rclone_webdav.log \\
    --log-level INFO

Restart=always
RestartSec=10
StandardOutput=append:/var/log/rclone_webdav.log
StandardError=append:/var/log/rclone_webdav.log

[Install]
WantedBy=multi-user.target
EOF

# 安装 rclone
if ! command -v rclone &> /dev/null; then
    curl https://rclone.org/install.sh | bash > /dev/null 2>&1
fi

# 启动服务
systemctl daemon-reload
systemctl enable aliyunpan-sync rclone-webdav
systemctl start aliyunpan-sync
systemctl start rclone-webdav

sleep 3

# ============ 显示完成信息 ============
echo ""
echo -e "${GREEN}=========================================="
echo "           安装完成!"
echo "==========================================${NC}"
echo ""

# 检查服务状态
if systemctl is-active --quiet aliyunpan-sync; then
    echo -e "${GREEN}✓ 云盘同步服务: 运行中${NC}"
else
    echo -e "${RED}✗ 云盘同步服务: 启动失败${NC}"
fi

if systemctl is-active --quiet rclone-webdav; then
    echo -e "${GREEN}✓ WebDAV 服务: 运行中${NC}"
else
    echo -e "${RED}✗ WebDAV 服务: 启动失败${NC}"
fi

echo ""
echo -e "${BLUE}【同步配置】${NC}"
echo "同步模式: 单向下载 (云盘→VPS)"
echo "删除同步: 支持 (云盘删除，本地也删除)"
echo "云盘路径: $CLOUD_DIR"
echo "本地路径: $SYNC_LOCAL_DIR"
echo "同步配置: ~/.config/aliyunpan/sync_drive/sync_drive_config.json"

echo ""
echo -e "${BLUE}【WebDAV 连接】${NC}"
PUBLIC_IP=$(curl -s --max-time 5 ifconfig.me 2>/dev/null || echo "获取失败")
PRIVATE_IP=$(hostname -I | awk '{print $1}')

echo "访问地址: https://$DOMAIN:$WEBDAV_PORT"
echo "外网 IP: https://$PUBLIC_IP:$WEBDAV_PORT"
echo "内网 IP: https://$PRIVATE_IP:$WEBDAV_PORT"
echo "用户名: $WEBDAV_USER"
echo "密码: $WEBDAV_PASSWORD"

echo ""
echo -e "${BLUE}【SSL 证书】${NC}"
echo "证书路径: $CERT_DIR"
echo "证书有效期: $(openssl x509 -enddate -noout -in $CERT_DIR/fullchain.pem)"

echo ""
echo -e "${BLUE}【常用命令】${NC}"
echo ""
echo -e "${YELLOW}查看同步状态:${NC}"
echo "  systemctl status aliyunpan-sync"
echo "  systemctl status rclone-webdav"
echo ""
echo -e "${YELLOW}查看实时日志:${NC}"
echo "  tail -f /var/log/aliyunpan_sync.log"
echo "  tail -f /var/log/rclone_webdav.log"
echo ""
echo -e "${YELLOW}重启服务:${NC}"
echo "  systemctl restart aliyunpan-sync"
echo "  systemctl restart rclone-webdav"
echo ""
echo -e "${YELLOW}查看本地文件:${NC}"
echo "  ls -lh $SYNC_LOCAL_DIR"
echo "  du -sh $SYNC_LOCAL_DIR"
echo ""
echo -e "${YELLOW}查看云盘文件:${NC}"
echo "  aliyunpan ls $CLOUD_DIR"
echo "  aliyunpan who"
echo ""

echo -e "${BLUE}【证书自动续期】${NC}"
echo "建议添加定时任务:"
echo ""
echo "  sudo crontab -e"
echo ""
echo "添加以下行:"
echo "  0 3 * * * certbot renew --quiet && systemctl restart rclone-webdav"
echo ""

echo -e "${YELLOW}【重要说明】${NC}"
echo "• 首次同步可能需要较长时间，请耐心等待"
echo "• 同步有一定延迟(30-60秒)，不是实时同步"
echo "• 云盘删除文件 → 本地也会被删除"
echo "• 本地手动修改文件可能被同步覆盖"
echo "• WebDAV 端口需要在防火墙开放"
echo "• 详细说明请查看脚本头部注释"
echo ""

echo -e "${GREEN}安装脚本执行完毕!${NC}"
echo ""
