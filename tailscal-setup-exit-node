#!/bin/bash

# ========================================
# Tailscale Exit Node 通用安装脚本
# 支持: OpenWrt, Ubuntu ARM/x86, Debian, CentOS/RHEL/Fedora
# ========================================

set -e  # 遇到错误立即退出

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 默认参数
CONFIRM=false
ENABLE_EXIT_NODE=false
VERBOSE=false

# 打印函数
print_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# 检查是否为 root 或有 sudo 权限
check_root() {
    if [[ $EUID -ne 0 ]]; then
        if ! command -v sudo &> /dev/null; then
            print_error "此脚本需要 root 权限或 sudo，但 sudo 未安装"
            exit 1
        fi
        SUDO="sudo"
    else
        SUDO=""
    fi
}

# 检测系统架构
detect_arch() {
    local arch=$(uname -m)
    case "$arch" in
        x86_64|amd64)
            ARCH="amd64"
            ;;
        aarch64|arm64)
            ARCH="arm64"
            ;;
        armv7l|armhf)
            ARCH="arm"
            ;;
        i386|i686)
            ARCH="386"
            ;;
        *)
            print_error "不支持的架构: $arch"
            exit 1
            ;;
    esac
    print_info "检测到系统架构: $ARCH"
}

# 检测操作系统
detect_os() {
    if [[ -f /etc/openwrt_release ]]; then
        OS="openwrt"
        print_info "检测到 OpenWrt 系统"
    elif [[ -f /etc/os-release ]]; then
        . /etc/os-release
        case "$ID" in
            ubuntu|debian|linuxmint|pop)
                OS="debian"
                OS_VERSION="$VERSION_CODENAME"
                print_info "检测到 Debian/Ubuntu 系统: $PRETTY_NAME"
                ;;
            centos|rhel|fedora|rocky|almalinux)
                OS="rhel"
                OS_VERSION="${VERSION_ID%%.*}"
                print_info "检测到 RHEL/CentOS/Fedora 系统: $PRETTY_NAME"
                ;;
            *)
                print_error "不支持的操作系统: $ID"
                exit 1
                ;;
        esac
    else
        print_error "无法检测操作系统"
        exit 1
    fi
}

# 安装 Tailscale - OpenWrt
install_tailscale_openwrt() {
    print_info "正在为 OpenWrt 安装 Tailscale..."
    
    # 更新包列表
    $SUDO opkg update
    
    # 安装依赖
    $SUDO opkg install libustream-openssl ca-bundle kmod-tun
    
    # 检查是否已安装
    if opkg list-installed | grep -q "^tailscale "; then
        print_info "Tailscale 已安装，正在更新..."
        $SUDO opkg upgrade tailscale
    else
        print_info "正在安装 Tailscale..."
        $SUDO opkg install tailscale
    fi
    
    # 启用并启动服务
    $SUDO /etc/init.d/tailscale enable
    $SUDO /etc/init.d/tailscale start
}

# 安装 Tailscale - Debian/Ubuntu
install_tailscale_debian() {
    print_info "正在为 Debian/Ubuntu 安装 Tailscale..."
    
    # 安装依赖
    $SUDO apt-get update
    $SUDO apt-get install -y curl gnupg apt-transport-https
    
    # 检查 lsb_release
    if ! command -v lsb_release &> /dev/null; then
        $SUDO apt-get install -y lsb-release
    fi
    
    # 获取版本代号
    if [[ -z "$OS_VERSION" ]]; then
        OS_VERSION=$(lsb_release -cs)
    fi
    
    print_info "使用 Ubuntu/Debian 版本: $OS_VERSION"
    
    # 添加 Tailscale GPG 密钥
    if [[ ! -f /usr/share/keyrings/tailscale-archive-keyring.gpg ]]; then
        curl -fsSL "https://pkgs.tailscale.com/stable/ubuntu/${OS_VERSION}.noarmor.gpg" | \
            $SUDO tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
    fi
    
    # 添加 Tailscale 仓库
    if [[ ! -f /etc/apt/sources.list.d/tailscale.list ]]; then
        echo "deb [signed-by=/usr/share/keyrings/tailscale-archive-keyring.gpg] https://pkgs.tailscale.com/stable/ubuntu ${OS_VERSION} main" | \
            $SUDO tee /etc/apt/sources.list.d/tailscale.list
    fi
    
    # 安装 Tailscale
    $SUDO apt-get update
    $SUDO apt-get install -y tailscale
    
    # 启用并启动服务
    $SUDO systemctl enable tailscaled
    $SUDO systemctl start tailscaled
}

# 安装 Tailscale - RHEL/CentOS/Fedora
install_tailscale_rhel() {
    print_info "正在为 RHEL/CentOS/Fedora 安装 Tailscale..."
    
    # 确定包管理器
    if command -v dnf &> /dev/null; then
        PKG_MGR="dnf"
    else
        PKG_MGR="yum"
    fi
    
    # 添加 Tailscale 仓库
    if [[ ! -f /etc/yum.repos.d/tailscale.repo ]]; then
        $SUDO $PKG_MGR install -y 'dnf-command(config-manager)' || true
        $SUDO $PKG_MGR config-manager --add-repo "https://pkgs.tailscale.com/stable/rhel/${OS_VERSION}/tailscale.repo" || \
        curl -fsSL "https://pkgs.tailscale.com/stable/rhel/${OS_VERSION}/tailscale.repo" | \
            $SUDO tee /etc/yum.repos.d/tailscale.repo
    fi
    
    # 安装 Tailscale
    $SUDO $PKG_MGR install -y tailscale
    
    # 启用并启动服务
    $SUDO systemctl enable tailscaled
    $SUDO systemctl start tailscaled
}

# 配置 IP 转发
configure_ip_forwarding() {
    print_info "正在配置 IP 转发..."
    
    if [[ "$OS" == "openwrt" ]]; then
        # OpenWrt 使用 UCI 配置
        $SUDO uci set network.globals.packet_steering='1'
        $SUDO uci commit network
        
        # 确保转发已启用
        echo 1 > /proc/sys/net/ipv4/ip_forward
        echo 1 > /proc/sys/net/ipv6/conf/all/forwarding
    else
        # Linux 系统使用 sysctl
        $SUDO sysctl -w net.ipv4.ip_forward=1
        $SUDO sysctl -w net.ipv6.conf.all.forwarding=1
        $SUDO sysctl -w net.ipv6.conf.default.forwarding=1
        
        # 持久化配置
        if [[ ! -f /etc/sysctl.d/99-tailscale.conf ]]; then
            cat << EOF | $SUDO tee /etc/sysctl.d/99-tailscale.conf
net.ipv4.ip_forward = 1
net.ipv6.conf.all.forwarding = 1
net.ipv6.conf.default.forwarding = 1
EOF
            $SUDO sysctl -p /etc/sysctl.d/99-tailscale.conf
        fi
    fi
    
    print_info "IP 转发已启用"
}

# 配置防火墙
configure_firewall() {
    print_info "正在配置防火墙..."
    
    if [[ "$OS" == "openwrt" ]]; then
        # OpenWrt 防火墙配置
        print_info "配置 OpenWrt 防火墙..."
        
        # 检查是否已有 Tailscale 区域
        if ! $SUDO uci show firewall | grep -q "name='tailscale'"; then
            # 创建 Tailscale 防火墙区域
            $SUDO uci add firewall zone
            $SUDO uci set firewall.@zone[-1].name='tailscale'
            $SUDO uci set firewall.@zone[-1].input='ACCEPT'
            $SUDO uci set firewall.@zone[-1].output='ACCEPT'
            $SUDO uci set firewall.@zone[-1].forward='ACCEPT'
            $SUDO uci set firewall.@zone[-1].masq='1'
            $SUDO uci set firewall.@zone[-1].device='tailscale0'
            
            # 允许 tailscale 转发到 wan
            $SUDO uci add firewall forwarding
            $SUDO uci set firewall.@forwarding[-1].src='tailscale'
            $SUDO uci set firewall.@forwarding[-1].dest='wan'
            
            $SUDO uci commit firewall
            $SUDO /etc/init.d/firewall reload
            
            print_info "OpenWrt 防火墙配置完成"
        else
            print_info "Tailscale 防火墙规则已存在"
        fi
    elif command -v firewall-cmd &> /dev/null; then
        # firewalld (CentOS/RHEL/Fedora)
        print_info "配置 firewalld..."
        if $SUDO firewall-cmd --state &> /dev/null; then
            $SUDO firewall-cmd --permanent --add-masquerade || true
            $SUDO firewall-cmd --reload || true
            print_info "firewalld 配置完成"
        fi
    elif command -v ufw &> /dev/null; then
        # UFW (Ubuntu)
        print_info "检测到 UFW，请确保允许 Tailscale 流量"
        $SUDO ufw allow 41641/udp comment 'Tailscale' || true
    fi
}

# 启动 Tailscale 并配置 Exit Node
start_tailscale() {
    print_info "正在启动 Tailscale..."
    
    # 检查 Tailscale 是否已安装
    if ! command -v tailscale &> /dev/null; then
        print_error "Tailscale 未正确安装"
        exit 1
    fi
    
    # 构建启动参数
    local params="--accept-routes"
    
    if [[ "$ENABLE_EXIT_NODE" == "true" ]]; then
        params="$params --advertise-exit-node"
        print_info "将此节点配置为 Exit Node"
    fi
    
    # 启动 Tailscale
    print_info "执行: tailscale up $params"
    $SUDO tailscale up $params
    
    echo ""
    print_info "======================================"
    print_info "Tailscale 安装和配置完成！"
    print_info "======================================"
    echo ""
    
    if [[ "$ENABLE_EXIT_NODE" == "true" ]]; then
        print_warn "重要提示："
        echo "1. 请访问 Tailscale 管理控制台: https://login.tailscale.com/admin/machines"
        echo "2. 找到此设备并启用 'Use as exit node' 选项"
        echo ""
    fi
    
    # 显示状态
    print_info "当前 Tailscale 状态："
    $SUDO tailscale status || true
    echo ""
    print_info "Tailscale IP 地址："
    $SUDO tailscale ip || true
}

# 显示帮助信息
show_help() {
    cat << EOF
Tailscale Exit Node 通用安装脚本

用法: $0 [选项]

选项:
  -y, --yes           跳过确认提示
  -e, --exit-node     启用 Exit Node 功能
  -v, --verbose       显示详细输出
  -h, --help          显示此帮助信息

支持的系统:
  - OpenWrt (所有架构)
  - Ubuntu/Debian (ARM/x86/x64)
  - CentOS/RHEL/Fedora (ARM/x86/x64)

示例:
  $0                    # 交互式安装
  $0 -y                 # 自动安装
  $0 -y -e              # 自动安装并启用 Exit Node
  $0 --yes --exit-node  # 同上

EOF
}

# 解析命令行参数
parse_args() {
    while [[ $# -gt 0 ]]; do
        case "$1" in
            -y|--yes|--force)
                CONFIRM=true
                shift
                ;;
            -e|--exit-node)
                ENABLE_EXIT_NODE=true
                shift
                ;;
            -v|--verbose)
                VERBOSE=true
                set -x
                shift
                ;;
            -h|--help)
                show_help
                exit 0
                ;;
            *)
                print_error "未知参数: $1"
                show_help
                exit 1
                ;;
        esac
    done
}

# 确认安装
confirm_install() {
    if [[ "$CONFIRM" == "false" ]]; then
        echo ""
        print_warn "此脚本将执行以下操作："
        echo "  1. 检测系统并安装 Tailscale"
        echo "  2. 配置 IP 转发"
        echo "  3. 配置防火墙规则"
        if [[ "$ENABLE_EXIT_NODE" == "true" ]]; then
            echo "  4. 将此节点配置为 Exit Node"
        fi
        echo ""
        read -p "确认继续安装？ (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            print_info "安装已取消"
            exit 0
        fi
    fi
}

# 主函数
main() {
    echo "======================================"
    echo "Tailscale Exit Node 通用安装脚本"
    echo "======================================"
    echo ""
    
    parse_args "$@"
    confirm_install
    check_root
    detect_arch
    detect_os
    
    # 根据系统类型安装
    case "$OS" in
        openwrt)
            install_tailscale_openwrt
            ;;
        debian)
            install_tailscale_debian
            ;;
        rhel)
            install_tailscale_rhel
            ;;
    esac
    
    # 配置系统
    configure_ip_forwarding
    configure_firewall
    
    # 启动 Tailscale
    start_tailscale
    
    echo ""
    print_info "安装完成！使用 'tailscale status' 查看连接状态"
}

# 执行主函数
main "$@"
